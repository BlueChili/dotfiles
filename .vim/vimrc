" set nocompatible               " Be iMproved
syntax on

" Custom command to generate ctags file
command! MakeTags !ctags -R
" Get a recursive search down the current working directory
set path+=**

" Vertical help taken from junegunn's vimrc
augroup vimrc_help
  autocmd!
  autocmd BufEnter *.txt if &buftype == 'help' | wincmd L | endif
augroup END

packadd minpac
if exists('*minpac#init')
  call minpac#init()
  " Add or remove your plugins here:
  " call minpac#add('kballard/vim-swift', {'on_ft': 'swift'})
  call minpac#add('Yggdroot/indentLine')
  call minpac#add('kenwheeler/glow-in-the-dark-gucci-shark-bites-vim')
  call minpac#add('morhetz/gruvbox')
  call minpac#add('vim-airline/vim-airline')
  call minpac#add('vim-airline/vim-airline-themes')
  call minpac#add('dense-analysis/ale')
  " call minpac#add('lsdr/monokai')
  call minpac#add('tpope/vim-fugitive')
  call minpac#add('vim-scripts/tComment')							"Easily comment with 'gcc'
  " call minpac#add('othree/yajs.vim')                  "JavaScript syntax
  call minpac#add('othree/es.next.syntax.vim')
  " call minpac#add('othree/javascript-libraries-syntax.vim')                  " syntax for libraries ex. React
  " call minpac#add('mxw/vim-jsx')
  call minpac#add('mattn/emmet-vim', {'on_ft': 'html'})
  call minpac#add('cespare/vim-toml', {'on_ft': 'toml'})
  call minpac#add('tpope/vim-surround')
  call minpac#add('tpope/vim-repeat')
  " call minpac#add('jiangmiao/auto-pairs')
  " call minpac#add('mhartington/oceanic-next')
  call minpac#add('mbbill/undotree')
  " call minpac#add('gorodinskiy/vim-coloresque', {'on_ft': ['scss', 'sass', 'css'] } )
  " call minpac#add('arcticicestudio/nord-vim')
  " call minpac#add('igankevich/mesonic', {'type': 'opt', 'name': 'meson'})
  call minpac#add('k-takata/minpac', {'type': 'opt'})
  call minpac#add('elmcast/elm-vim')
  call minpac#add('junegunn/limelight.vim')
  call minpac#add('junegunn/fzf')
  call minpac#add('junegunn/fzf.vim')
  call minpac#add('jparise/vim-graphql' )
  call minpac#update()
endif

let g:netrw_preview=1

  " Gruvbox theme configuration
  let g:gruvbox_italic=1
  let g:gruvbox_vert_split="aqua"
  let g:gruvbox_italicize_strings=1
  let g:gruvbox_contrast_light="hard"
  let g:gruvbox_contrast_dark="hard"
  set background=dark "setting gruvbox dark variant

  " Current theme config
  let g:ale_lint_delay = 30    " left here to use after battery replacement
  colorscheme gruvbox
  let g:airline_powerline_fonts = 1
  let g:airline_theme='gruvbox'

  "Indent guides plugin config
  set listchars=eol:\*,tab:\|\ 
  set relativenumber
  set scrolloff=1
  
  " let CtrlP know that files and paths in .gitignore should be ignored from search
  set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/node_modules/*,*/meteor/*,*/bower_components/*,*.css.map,*.js.map,*/out/*,*dist*,*/public/*,*/elm-stuff/*




" You can specify revision/branch/tag.
" call minpac#add('Shougo/vimshell', { 'rev': '3787e5' })

set undofile
set undodir=~/.vim/undo

set termguicolors
" incremental live substitute
" set inccommand=split
" Required:
filetype plugin indent on

let g:used_javascript_libs = 'react'
let g:user_emmet_leader_key='<leader>e'

" Configuration file for vim "
"
set noswapfile
" Leader key
let mapleader = ","
"
" Keymappings
map <leader>s :w<CR>
nmap <leader>s :w<CR>
imap <leader>s <ESC>:w<CR>
map <leader>qa :qa<CR>
nmap <leader>qa :qa<CR>
imap <leader>qa <ESC>:qa<CR>
map <leader>qq :q<CR>
nmap <leader>qq :q<CR>
imap <leader>qq <ESC>:q<CR>
noremap <leader>qq :q<CR>
nnoremap <leader>h <C-w>h
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
" git-fugitive mappings
map <leader>gst :vert Git<CR>
map <leader>gcm :Git commit<CR>
map <leader>gpu :Git push<CR>
" Plugin & Third-Party apps dependent keymappings
nnoremap <F5> :UndotreeToggle<cr>
" nmap <leader>d :Dash<CR>
imap <leader>fp <ESC>:Files<CR>
nmap <leader>fp <ESC>:Files<CR>
imap <leader>p <ESC>:GFiles<CR>
nmap <leader>p <ESC>:GFiles<CR>
nmap <leader><leader>v :e $MYVIMRC<CR>
nmap <leader><leader>n <ESC>:e notes.md<CR>
"
"wheelies 
no <up> ddkP
no <down> ddp 

" I suck at typing!!!!!
iabbrev htpp http
iabbrev flase false
iabbrev ture true
iabbrev tuer true
iabbrev fucntion function
iabbrev marign margin
" DOM abreviations
iabbrev csl console.log(
iabbrev dmt document
iabbrev qse querySelector(
iabbrev qsa querySelectorAll(
iabbrev qsl document.querySelector(
iabbrev qsla document.querySelectorAll(
iabbrev ael addEventListener(
iabbrev gebi getElementById(
iabbrev gebt getElementsByTagName(
iabbrev gebc getElementsByClassName(
iabbrev mq7 @media (min-width: 768px) {
iabbrev mq10 @media (min-width: 1024px) {
iabbrev mq13 @media (min-width: 1366px) {

" ALE key bindings
imap <leader>aah <ESC>:ALEHover<CR>
nmap <leader>aah <ESC>:ALEHover<CR>
imap <leader>aad <ESC>:ALEDocumentation<CR>
nmap <leader>aad <ESC>:ALEDocumentation<CR>
imap <leader>aaf <ESC>:ALEFindReferences<CR>
nmap <leader>aaf <ESC>:ALEFindReferences<CR>

" TS Compile
imap <leader>ts <ESC>:!npx tsc -p tsconfig.json<CR>i
nmap <leader>ts <ESC>:!npx tsc -p tsconfig.json<CR>

set mouse=nv
set modelines=0		" CVE-2007-2438
set wildmenu
set hlsearch
set incsearch " search as characters are entered
set cursorline
set showmatch
set history=10000
set showtabline=2
set laststatus=2
" Magic to get a line number
set number
set numberwidth=5
" Prevent Vim from clobbering scrollback buffer
"
set t_ti= t_te=
nnoremap <CR> :nohlsearch<cr>
" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
set backspace=2		" more powerful backspacing
set tabstop=2		" 2 spaces -> tabstops on file read
set softtabstop=2 " tabs map to 2 spaces on EDITING mode
set shiftwidth=2
set expandtab
set colorcolumn=80
" let FZF_DEFAULT_COMMAND='rg --files --no-hidden -i'
" Don't write backup file if vim is being called by "crontab -e"
au BufWrite /private/tmp/crontab.* set nowritebackup nobackup
" Don't write backup file if vim is being called by "chpass"
au BufWrite /private/etc/pw.* set nowritebackup nobackup




" HTML file config
augroup configgroup
	autocmd!
	autocmd FileType html setlocal tabstop=4		" 2 spaces -> tabstops on file read
	autocmd FileType html setlocal softtabstop=4 " tabs map to 2 spaces on EDITING mode
	autocmd FileType html setlocal shiftwidth=4
augroup END

autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
